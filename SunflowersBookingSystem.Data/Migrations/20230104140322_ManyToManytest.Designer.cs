// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SunflowersBookingSystem.Data;

#nullable disable

namespace SunflowersBookingSystem.Data.Migrations
{
    [DbContext(typeof(SunflowersDbContext))]
    [Migration("20230104140322_ManyToManytest")]
    partial class ManyToManytest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.Property<int>("ReservationsId")
                        .HasColumnType("int");

                    b.Property<int>("RoomsId")
                        .HasColumnType("int");

                    b.HasKey("ReservationsId", "RoomsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("ReservationRooms", (string)null);
                });

            modelBuilder.Entity("SunflowersBookingSystem.Data.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArriveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Arrival Time");

                    b.Property<string>("Comment")
                        .HasMaxLength(245)
                        .HasColumnType("nvarchar(245)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("End Date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Start Date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArriveTime = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Comment = "It was aight",
                            EndDate = new DateTime(2023, 1, 4, 14, 3, 22, 338, DateTimeKind.Utc).AddTicks(5208),
                            StartDate = new DateTime(2023, 1, 4, 16, 3, 22, 338, DateTimeKind.Local).AddTicks(5167),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            ArriveTime = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Comment = "same",
                            EndDate = new DateTime(2023, 1, 4, 14, 3, 22, 338, DateTimeKind.Utc).AddTicks(5215),
                            StartDate = new DateTime(2023, 1, 4, 16, 3, 22, 338, DateTimeKind.Local).AddTicks(5213),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("SunflowersBookingSystem.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Booked")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Booked = true,
                            Capacity = 2,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Booked = false,
                            Capacity = 2,
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            Booked = false,
                            Capacity = 4,
                            Number = 3
                        },
                        new
                        {
                            Id = 4,
                            Booked = false,
                            Capacity = 4,
                            Number = 4
                        },
                        new
                        {
                            Id = 5,
                            Booked = false,
                            Capacity = 4,
                            Number = 5
                        });
                });

            modelBuilder.Entity("SunflowersBookingSystem.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Phone");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)")
                        .HasColumnName("ProfilePicture");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SecondName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Bulgaria",
                            Email = "my@email.com",
                            FirstName = "Sa",
                            Phone = "012345678",
                            SecondName = "An"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Bulgaria",
                            Email = "my@email.com",
                            FirstName = "E",
                            Phone = "012345678",
                            SecondName = "I"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Bulgaria",
                            Email = "testing@res.bg",
                            FirstName = "Se",
                            Phone = "012345678",
                            SecondName = "Ed"
                        });
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.HasOne("SunflowersBookingSystem.Data.Models.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SunflowersBookingSystem.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SunflowersBookingSystem.Data.Models.Reservation", b =>
                {
                    b.HasOne("SunflowersBookingSystem.Data.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SunflowersBookingSystem.Data.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
